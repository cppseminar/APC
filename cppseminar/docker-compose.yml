# This is used for dev purposes only
services:
    submissions.local:
        build:
            context: ./submissions
            target: dev
        volumes:
            - ./submissions/Controllers:/src/Controllers
            - ./submissions/Data:/src/Data
            - ./submissions/Models:/src/Models
            - ./submissions/Services:/src/Services
            - ./submissions/Startup.cs:/src/Startup.cs
        ports:
            - 8081:80
        networks:
            - sharednet
        depends_on:
            cosmosdb.local:
                condition: service_healthy
        environment:
            DOTNET_USE_POLLING_FILE_WATCHER: 1
            DOTNET_WATCH_SUPPRESS_MSBUILD_INCREMENTALISM: 1
            DOTNET_WATCH_SUPPRESS_LAUNCH_BROWSER: 1
            DOTNET_WATCH_SUPPRESS_BROWSER_REFRESH: 1
            CosmosSettings__DatabaseName: apctest
            CosmosSettings__ConnectionString: ${COSMOS_CONN_STR}
            StorageConnectionString: DefaultEndpointsProtocol=http;AccountName=azuriteuser;AccountKey=UGFzc3dvcmQxMjMhfg==;BlobEndpoint=http://azurite.local:10000/azuriteuser;
            LOG_PRETTY: 1
        restart: always

    presentation.local:
        build:
            context: ./presentation
            target: dev
        volumes:
            - ./presentation/Startup.cs:/src/Startup.cs
            - ./presentation/Program.cs:/src/Program.cs
            - ./presentation/Model:/src/Model
            - ./presentation/Pages:/src/Pages
            - ./presentation/Services:/src/Services
        networks:
            - sharednet
        ports:
            - 8080:8080
        environment:
            DOTNET_USE_POLLING_FILE_WATCHER: 1
            DOTNET_WATCH_SUPPRESS_MSBUILD_INCREMENTALISM: 1
            DOTNET_WATCH_SUPPRESS_LAUNCH_BROWSER: 1
            DOTNET_WATCH_SUPPRESS_BROWSER_REFRESH: 1
            ASPNETCORE_ENVIRONMENT: Development
            SUBMISSION_SERVICE: http://submissions.local:5004/
            TEST_SERVICE: http://testservice.local/
            USER_SERVICE: http://userservice.local/
            STORAGE_CONNECTION_STRING: DefaultEndpointsProtocol=http;AccountName=azuriteuser;AccountKey=UGFzc3dvcmQxMjMhfg==;BlobEndpoint=http://azurite.local:10000/azuriteuser;
            GoogleOid__ClientId: ${GOOGLE_CLIENT_ID}
            GoogleOid__ClientSecret: ${GOOGLE_CLIENT_SECRET}
            LOG_PRETTY: 1
        restart: always

    userservice.local:
        build:
            context: ./userservice
            target: dev
        networks:
            - sharednet
        volumes:
            - ./userservice/Startup.cs:/src/Startup.cs
            - ./userservice/Program.cs:/src/Program.cs
            - ./userservice/Controllers:/src/Controllers
            - ./userservice/Models:/src/Models
            - ./userservice/Services:/src/Services
        ports:
            - 8082:80
        environment:
            LOG_PRETTY: 1
            TABLE_STORAGE: DefaultEndpointsProtocol=http;AccountName=azuriteuser;AccountKey=UGFzc3dvcmQxMjMhfg==;TableEndpoint=http://azurite.local:10002/azuriteuser;
        restart: always

    testservice.local:
        build:
            context: ./testservice
            target: dev
        networks:
            - sharednet
        volumes:
            - ./testservice/Startup.cs:/src/Startup.cs
            - ./testservice/Program.cs:/src/Program.cs
            - ./testservice/Controllers:/src/Controllers
            - ./testservice/Models:/src/Models
            - ./testservice/Services:/src/Services
        ports:
            - 8083:80
        depends_on:
            rabbitmq.local:
                condition: service_healthy
            azurite.local:
                condition: service_started
            cosmosdb.local:
                condition: service_healthy
        environment:
            TEST_REQUESTS_QUEUE: test-input
            TEST_RESULTS_QUEUE: test-output
            MQ_URI: amqp://rabbitmq.local/
            BLOB_STORAGE_CONNECTION: DefaultEndpointsProtocol=http;AccountName=azuriteuser;AccountKey=UGFzc3dvcmQxMjMhfg==;BlobEndpoint=http://azurite.local:10000/azuriteuser;
            COSMOS_CONNECTION_STRING: ${COSMOS_CONN_STR}
            COSMOS_DB_NAME: apctest
            LOG_PRETTY: 1
        restart: always
        healthcheck:
          test: ['CMD', 'curl', '-f', 'http://localhost/healthcheck']
          timeout: 10s

    azurite.local:
        image: mcr.microsoft.com/azure-storage/azurite:3.14.0
        volumes:
            - azurite_data:/data
        ports:
            - 10000:10000 # blob storage
            - 10002:10002 # tables
        command:
            - azurite
            - --blobHost
            - 0.0.0.0
            - --tableHost
            - 0.0.0.0
            - --location
            - /data
        networks:
            - sharednet
        environment:
            AZURITE_ACCOUNTS: azuriteuser:UGFzc3dvcmQxMjMhfg==
# Connection string:
# DefaultEndpointsProtocol=http;AccountName=azuriteuser;AccountKey=UGFzc3dvcmQxMjMhfg==;BlobEndpoint=http://localhost:10000/azuriteuser;

    vmtestqueue.local:
        build:
            context: ./vm-test-queue
        networks:
            - sharednet
        depends_on:
            testservice.local:
                condition: service_healthy
        environment:
            SUBMISSION_QUEUE_NAME: test-input
            VM_TEST_SERVER: vmtestserver.local:80
            RABBIT_MQ: rabbitmq.local
        restart: always

    vmtestserver.local:
        build:
            context: ./vm-test-server
        networks:
            - sharednet
        ports:
            - 8084:80
        environment:
            RESULTS_BLOB_CONN_STR: DefaultEndpointsProtocol=http;AccountName=azuriteuser;AccountKey=UGFzc3dvcmQxMjMhfg==;BlobEndpoint=http://azurite.local:10000/azuriteuser;
            RESULTS_QUEUE_NAME: test-output
            VM_TEST_RETURN_ADDR: ${VM_TEST_RETURN_ADDR}:8084
            VM_TEST_ADDR: ${VM_TEST_ADDR_PORT}
            RABBIT_MQ: rabbitmq.local
        restart: always

    rabbitmq.local:
        image: rabbitmq:3-management-alpine
        container_name: rabbitmq
        ports:
            - 5672:5672
            - 15672:15672
        networks:
            - sharednet
        restart: always
        healthcheck:
            test: rabbitmq-diagnostics -q ping

    cosmosdb.local:
        build:
            context: ./cosmosdb-emul
        mem_limit: 3GB
        cpu_count: 2
        hostname: cosmosdb
        ports:
            - 8100:8081
            - 10251:10251
            - 10252:10252
            - 10253:10253
            - 10254:10254
        environment:
            AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE: 'true'
            AZURE_COSMOS_EMULATOR_IP_ADDRESS_OVERRIDE: 172.19.0.100
            AZURE_COSMOS_EMULATOR_CERTIFICATE: /usr/local/share/ca-certificates/cosmosdb-emulator.pfx
#AccountEndpoint=https://172.19.0.100:8081/;AccountKey=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==
        networks:
            sharednet:
                ipv4_address: 172.19.0.100
        volumes:
            #- cosmosdb_data:/tmp/cosmos # weird, this may change in the future
            - ./cosmosdb-emul/cosmosdb-emulator.pfx:/usr/local/share/ca-certificates/cosmosdb-emulator.pfx
        healthcheck:
            test: ["CMD-SHELL", "curl -f -k https://localhost:8081/_explorer/emulator.pem"]

    postgresql.local:
        container_name: temporal-postgresql
        environment:
            POSTGRES_PASSWORD: password
            POSTGRES_USER: temporal
        image: postgres:13.4
        networks:
            - temporal-network
        ports:
            - 5432:5432

    temporal.local:
        container_name: temporal
        depends_on:
            - postgresql.local
        environment:
            DB: postgresql
            DB_PORT: 5432
            POSTGRES_USER: temporal
            POSTGRES_PWD: password
            POSTGRES_SEEDS: postgresql.local
            DYNAMIC_CONFIG_FILE_PATH: config/dynamicconfig/development_sql.yaml
        image: temporalio/auto-setup:1.15.2
        networks:
            - temporal-network
        ports:
            - 7233:7233
        volumes:
            - ./temporal/dynamicconfig:/etc/temporal/config/dynamicconfig

    temporal-web.local:
        container_name: temporal-web
        depends_on:
            - temporal.local
        environment:
            TEMPORAL_GRPC_ENDPOINT: temporal.local:7233
            TEMPORAL_PERMIT_WRITE_API: 'true'
        image: temporalio/web:1.15.0
        networks:
            - temporal-network
        ports:
            - 8088:8088

    gateway:
        image: envoyproxy/envoy:v1.22-latest
        ports:
            - 5000:5000
            - 9901:9901
        volumes:
            - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
        networks:
            - sharednet


networks:
    sharednet:
        external: false
        ipam:
            driver: default
            config:
                - subnet: 172.19.0.0/24
    temporal-network:

volumes:
    azurite_data:
    cosmosdb_data:



