# This is used for dev purposes only
services:
    submissions.local:
        build:
            context: ./submissions
            target: dev
        volumes:
            - ./submissions/Controllers:/src/Controllers
            - ./submissions/Data:/src/Data
            - ./submissions/Models:/src/Models
            - ./submissions/Services:/src/Services
            - ./submissions/Startup.cs:/src/Startup.cs
        ports:
            - 8081:80
        networks:
            - sharednet
        environment:
            DOTNET_USE_POLLING_FILE_WATCHER: 1
            DOTNET_WATCH_SUPPRESS_MSBUILD_INCREMENTALISM: 1
            DOTNET_WATCH_SUPPRESS_LAUNCH_BROWSER: 1
            DOTNET_WATCH_SUPPRESS_BROWSER_REFRESH: 1
            CosmosSettings__DatabaseName: apctest
            CosmosSettings__ConnectionString: ${COSMOS_CONN_STR}
            StorageConnectionString: DefaultEndpointsProtocol=http;AccountName=azuriteuser;AccountKey=UGFzc3dvcmQxMjMhfg==;BlobEndpoint=http://azurite.local:10000/azuriteuser;
            LOG_PRETTY: 1
        restart: always

    presentation.local:
        build:
            context: ./presentation
            target: dev
        volumes:
            - ./presentation/Startup.cs:/src/Startup.cs
            - ./presentation/Program.cs:/src/Program.cs
            - ./presentation/Model:/src/Model
            - ./presentation/Pages:/src/Pages
            - ./presentation/Services:/src/Services
        networks:
            - sharednet
        ports:
            - 8080:8080
        environment:
            DOTNET_USE_POLLING_FILE_WATCHER: 1
            DOTNET_WATCH_SUPPRESS_MSBUILD_INCREMENTALISM: 1
            DOTNET_WATCH_SUPPRESS_LAUNCH_BROWSER: 1
            DOTNET_WATCH_SUPPRESS_BROWSER_REFRESH: 1
            ASPNETCORE_ENVIRONMENT: Development
            API_GATEWAY: http://gateway.local:5000/
            STORAGE_CONNECTION_STRING: DefaultEndpointsProtocol=http;AccountName=azuriteuser;AccountKey=UGFzc3dvcmQxMjMhfg==;BlobEndpoint=http://azurite.local:10000/azuriteuser;
            GoogleOid__ClientId: ${GOOGLE_CLIENT_ID}
            GoogleOid__ClientSecret: ${GOOGLE_CLIENT_SECRET}
            LOG_PRETTY: 1
        restart: always

    userservice.local:
        build:
            context: ./userservice
            target: dev
        networks:
            - sharednet
        volumes:
            - ./userservice/Startup.cs:/src/Startup.cs
            - ./userservice/Program.cs:/src/Program.cs
            - ./userservice/Controllers:/src/Controllers
            - ./userservice/Models:/src/Models
            - ./userservice/Services:/src/Services
        ports:
            - 8082:80
        environment:
            LOG_PRETTY: 1
            TABLE_STORAGE: DefaultEndpointsProtocol=http;AccountName=azuriteuser;AccountKey=UGFzc3dvcmQxMjMhfg==;TableEndpoint=http://azurite.local:10002/azuriteuser;
        restart: always

    testservice.local:
        build:
            context: ./testservice
            target: dev
        networks:
            - sharednet
        volumes:
            - ./testservice/Startup.cs:/src/Startup.cs
            - ./testservice/Program.cs:/src/Program.cs
            - ./testservice/Controllers:/src/Controllers
            - ./testservice/Models:/src/Models
            - ./testservice/Services:/src/Services
        ports:
            - 8083:80
        depends_on:
            rabbitmq.local:
                condition: service_healthy
            azurite.local:
                condition: service_started
        environment:
            TEST_REQUESTS_QUEUE: test-input
            TEST_RESULTS_QUEUE: test-output
            MQ_URI: amqp://rabbitmq.local/
            BLOB_STORAGE_CONNECTION: DefaultEndpointsProtocol=http;AccountName=azuriteuser;AccountKey=UGFzc3dvcmQxMjMhfg==;BlobEndpoint=http://azurite.local:10000/azuriteuser;
            COSMOS_CONNECTION_STRING: ${COSMOS_CONN_STR}
            COSMOS_DB_NAME: apctest
            LOG_PRETTY: 1
        restart: always
        healthcheck:
          test: ['CMD', 'curl', '-f', 'http://localhost/healthcheck']
          timeout: 10s

    mqreadservice.local:
        build:
            context: ./mqreadservice
            target: dev
        networks:
            - sharednet
        volumes:
            - ./mqreadservice/Program.cs:/src/Program.cs
            - ./mqreadservice/Controllers:/src/Controllers
            - ./mqreadservice/Models:/src/Models
            - ./mqreadservice/Helpers:/src/Helpers
        ports:
            - 8085:80
        environment:
            LOG_PRETTY: 1
            TEST_INPUT_QUEUE: test-input
            MQ_URI: rabbitmq.local
            VM_TEST_RETURN_ADDR: vmtestserver.local:80
        restart: always

    azurite.local:
        image: mcr.microsoft.com/azure-storage/azurite:3.14.0
        volumes:
            - azurite_data:/data
        ports:
            - 10000:10000 # blob storage
            - 10002:10002 # tables
        command:
            - azurite
            - --blobHost
            - 0.0.0.0
            - --tableHost
            - 0.0.0.0
            - --location
            - /data
        networks:
            - sharednet
        environment:
            AZURITE_ACCOUNTS: azuriteuser:UGFzc3dvcmQxMjMhfg==
# Connection string:
# DefaultEndpointsProtocol=http;AccountName=azuriteuser;AccountKey=UGFzc3dvcmQxMjMhfg==;BlobEndpoint=http://localhost:10000/azuriteuser;

    vmtestserver.local:
        build:
            context: ./vm-test-server
        networks:
            - sharednet
        ports:
            - 8084:80
        environment:
            LOG_PRETTY: 1
            RESULTS_BLOB_CONN_STR: DefaultEndpointsProtocol=http;AccountName=azuriteuser;AccountKey=UGFzc3dvcmQxMjMhfg==;BlobEndpoint=http://azurite.local:10000/azuriteuser;
            RESULTS_QUEUE_NAME: test-output
            VM_TEST_RETURN_ADDR: vmtestserver.local:80
            VM_TEST_ADDR: test-worker.local:10009
            RABBIT_MQ: rabbitmq.local
        restart: always

    rabbitmq.local:
        image: rabbitmq:3-management-alpine
        container_name: rabbitmq
        ports:
            - 5672:5672
            - 15672:15672
        networks:
            - sharednet
        restart: always
        healthcheck:
            test: rabbitmq-diagnostics -q ping

    # docker in docker is needed for test-worker.local
    # it seems like they decided to drop not tls connections 
    # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/27300
    # and they even make the startup slower... stange but whatever
    # we will do anything to not be required to mess with certs ;)
    docker-in-docker.local:
        image: docker:20-dind
        networks:
            - sharednet
        privileged: true
        expose:
            - 2375
        environment:
            DOCKER_TLS_CERTDIR: ""
        volumes:
            - worker_shared:/data

    test-worker.local:
        build:
            context: ../services/queued
        environment:
            DOCKER_HOST: tcp://docker-in-docker.local:2375
            SHARED_DATA_DIR: /data
        networks:
            - sharednet
        restart: always
        depends_on:
            - docker-in-docker.local
        volumes:
            - worker_shared:/data


    # postgresql.local:
    #     container_name: temporal-postgresql
    #     environment:
    #         POSTGRES_PASSWORD: password
    #         POSTGRES_USER: temporal
    #     image: postgres:13.4
    #     networks:
    #         - temporal-network
    #     ports:
    #         - 5432:5432

    # temporal.local:
    #     container_name: temporal
    #     depends_on:
    #         - postgresql.local
    #     environment:
    #         DB: postgresql
    #         DB_PORT: 5432
    #         POSTGRES_USER: temporal
    #         POSTGRES_PWD: password
    #         POSTGRES_SEEDS: postgresql.local
    #         DYNAMIC_CONFIG_FILE_PATH: config/dynamicconfig/development_sql.yaml
    #     image: temporalio/auto-setup:1.15.2
    #     networks:
    #         - temporal-network
    #     ports:
    #         - 7233:7233
    #     volumes:
    #         - ./temporal/dynamicconfig:/etc/temporal/config/dynamicconfig

    # temporal-web.local:
    #     container_name: temporal-web
    #     depends_on:
    #         - temporal.local
    #     environment:
    #         TEMPORAL_GRPC_ENDPOINT: temporal.local:7233
    #         TEMPORAL_PERMIT_WRITE_API: 'true'
    #     image: temporalio/web:1.15.0
    #     networks:
    #         - temporal-network
    #     ports:
    #         - 8088:8088

    gateway.local:
        image: envoyproxy/envoy:v1.22-latest
        ports:
            - 5000:5000
            - 9901:9901
        volumes:
            - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
        networks:
            - sharednet


networks:
    sharednet:
    temporal-network:

volumes:
    azurite_data:
    worker_shared:




