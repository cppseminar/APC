# This is used for dev purposes only
services:
    submissions.local:
        build:
            context: ./submissions
            target: dev
        volumes:
            - ./submissions/Controllers:/src/Controllers
            - ./submissions/Data:/src/Data
            - ./submissions/Models:/src/Models
            - ./submissions/Services:/src/Services
            - ./submissions/Startup.cs:/src/Startup.cs
            - ./submissions/Program.cs:/src/Program.cs
        ports:
            - 8081:80
        networks:
            - sharednet
        environment:
            DOTNET_USE_POLLING_FILE_WATCHER: 1
            DOTNET_WATCH_SUPPRESS_MSBUILD_INCREMENTALISM: 1
            DOTNET_WATCH_SUPPRESS_LAUNCH_BROWSER: 1
            DOTNET_WATCH_SUPPRESS_BROWSER_REFRESH: 1
            MongoDB__DatabaseName: submissionsDb
            MongoDB__ConnectionString: mongodb://admin:password@mongo.local:27017/
            StorageConnectionString: DefaultEndpointsProtocol=http;AccountName=azuriteuser;AccountKey=UGFzc3dvcmQxMjMhfg==;BlobEndpoint=http://azurite.local:10000/azuriteuser;
            LOG_PRETTY: 1
        restart: always
        depends_on:
            - mongo.local

    presentation.local:
        build:
            context: ./presentation
            target: dev
        volumes:
            - ./presentation/Startup.cs:/src/Startup.cs
            - ./presentation/Program.cs:/src/Program.cs
            - ./presentation/Model:/src/Model
            - ./presentation/Pages:/src/Pages
            - ./presentation/Services:/src/Services
            - ./presentation/wwwroot:/src/wwwroot
            - ./presentation/Hubs:/src/Hubs
            - ./presentation/Filters:/src/Filters
            - ./presentation/appsettings.json:/src/appsettings.json
        networks:
            - sharednet
        ports:
            - 8080:8080
        environment:
            DOTNET_USE_POLLING_FILE_WATCHER: 1
            DOTNET_WATCH_SUPPRESS_MSBUILD_INCREMENTALISM: 1
            DOTNET_WATCH_SUPPRESS_LAUNCH_BROWSER: 1
            DOTNET_WATCH_SUPPRESS_BROWSER_REFRESH: 1
            ASPNETCORE_ENVIRONMENT: Development
            LINKS_CURRENT_DOCS: https://example.com/
            API_GATEWAY: http://gateway.local:5000/
            STORAGE_CONNECTION_STRING: DefaultEndpointsProtocol=http;AccountName=azuriteuser;AccountKey=UGFzc3dvcmQxMjMhfg==;BlobEndpoint=http://azurite.local:10000/azuriteuser;
            GoogleOid__ClientId: ${GOOGLE_CLIENT_ID}
            GoogleOid__ClientSecret: ${GOOGLE_CLIENT_SECRET}
            LOG_PRETTY: 1
        restart: always
        depends_on:
            - rabbitmq.local
            - monitoringservice.local

    userservice.local:
        build:
            context: ./userservice
            target: dev
        networks:
            - sharednet
        volumes:
            - ./userservice/Startup.cs:/src/Startup.cs
            - ./userservice/Program.cs:/src/Program.cs
            - ./userservice/Controllers:/src/Controllers
            - ./userservice/Models:/src/Models
            - ./userservice/Services:/src/Services
        ports:
            - 8082:80
        environment:
            LOG_PRETTY: 1
            MongoDB__DatabaseName: usersDb
            MongoDB__ConnectionString: mongodb://admin:password@mongo.local:27017/
        restart: always

    testservice.local:
        build:
            context: ./testservice
            target: dev
        networks:
            - sharednet
        volumes:
            - ./testservice/Startup.cs:/src/Startup.cs
            - ./testservice/Program.cs:/src/Program.cs
            - ./testservice/Controllers:/src/Controllers
            - ./testservice/Models:/src/Models
            - ./testservice/Services:/src/Services
        ports:
            - 8083:80
        depends_on:
            rabbitmq.local:
                condition: service_healthy
            azurite.local:
                condition: service_started
            mongo.local:
                condition: service_started
        environment:
            TEST_REQUESTS_QUEUE: test-input
            TEST_RESULTS_QUEUE: test-output
            MQ_URI: amqp://rabbitmq.local/
            BLOB_STORAGE_CONNECTION: DefaultEndpointsProtocol=http;AccountName=azuriteuser;AccountKey=UGFzc3dvcmQxMjMhfg==;BlobEndpoint=http://azurite.local:10000/azuriteuser;
            MongoDB__DatabaseName: testsDb
            MongoDB__ConnectionString: mongodb://admin:password@mongo.local:27017/
            LOG_PRETTY: 1
        restart: always
        healthcheck:
          test: ['CMD', 'curl', '-f', 'http://localhost/healthcheck']
          timeout: 10s

    azurite.local:
        image: mcr.microsoft.com/azure-storage/azurite:3.14.0 
        volumes:
            - azurite_data:/data
        ports:
            - 10000:10000 # blob storage
        command:
            - azurite
            - --blobHost
            - 0.0.0.0
            - --location
            - /data
            - --skipApiVersionCheck
        networks:
            - sharednet
        environment:
            AZURITE_ACCOUNTS: azuriteuser:UGFzc3dvcmQxMjMhfg==
# Connection string:
# DefaultEndpointsProtocol=http;AccountName=azuriteuser;AccountKey=UGFzc3dvcmQxMjMhfg==;BlobEndpoint=http://localhost:10000/azuriteuser;

    vmtestqueue.local:
        build:
            context: ./vm-test-queue
        networks:
            - sharednet
        depends_on:
            - rabbitmq.local
            - testservice.local
        environment:
            LOG_PRETTY: 1
            SUBMISSION_QUEUE_NAME: test-input
            VM_TEST_SERVER: vmtestserver.local:80
            RABBIT_MQ: rabbitmq.local
        restart: always

    vmtestserver.local:
        build:
            context: ./vm-test-server
        networks:
            - sharednet
        ports:
            - 8084:80
        environment:
            LOG_PRETTY: 1
            RESULTS_BLOB_CONN_STR: DefaultEndpointsProtocol=http;AccountName=azuriteuser;AccountKey=UGFzc3dvcmQxMjMhfg==;BlobEndpoint=http://azurite.local:10000/azuriteuser;
            RESULTS_QUEUE_NAME: test-output
            VM_TEST_RETURN_ADDR: vmtestserver.local:80
            VM_TEST_ADDR: test-worker.local:10009
            RABBIT_MQ: rabbitmq.local
        restart: always

    rabbitmq.local:
        image: rabbitmq:3-management-alpine
        container_name: rabbitmq
        ports:
            - 5672:5672
            - 15672:15672
        networks:
            - sharednet
        restart: always
        healthcheck:
            test: rabbitmq-diagnostics -q ping


    # docker in docker is needed for test-worker.local
    # it seems like they decided to drop not tls connections
    # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/27300
    # and they even make the startup slower... stange but whatever
    # we will do anything to not be required to mess with certs ;)
    docker-in-docker.local:
        image: docker:20-dind
        networks:
            - sharednet
        privileged: true
        expose:
            - 2375
        environment:
            DOCKER_TLS_CERTDIR: ""
        volumes:
            - worker_shared:/data

    mongo.local:
        image: mongo:6.0.1
        restart: always
        ports:
            - 27017:27017
        networks:
            - sharednet
        environment:
            MONGO_INITDB_ROOT_USERNAME: admin
            MONGO_INITDB_ROOT_PASSWORD: password
        volumes:
            - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
            - type: bind
              source: ./mongo/admins.txt
              target: /data/init/admins.txt 
            - mongo_data:/data/db
# MongoDB connection string mongodb://admin:password@mongo.local:27017/

    mongo-express.local:
        image: mongo-express
        environment:
            - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
            - ME_CONFIG_MONGODB_ADMINPASSWORD=password
            - ME_CONFIG_MONGODB_URL=mongodb://admin:password@mongo.local:27017/
            - ME_CONFIG_BASICAUTH_USERNAME=mexpress
            - ME_CONFIG_BASICAUTH_PASSWORD=mexpress
        restart: unless-stopped
        ports:
            - 9090:8081
        networks:
            - sharednet

    mongo-backup.local:
        build:
            context: ../services/mongo-simple-backup
            target: dev
        environment:
            - MONGO_CONN_STR=mongodb://admin:password@mongo.local:27017/
            - RCLONE_CONFIG_MONGO_BACKUPS_TYPE=azureblob
            - RCLONE_CONFIG_MONGO_BACKUPS_ACCOUNT=${STORAGE_AZUREBLOB_ACCOUNT}
            - RCLONE_CONFIG_MONGO_BACKUPS_KEY=${STORAGE_AZUREBLOB_KEY}
            - RCLONE_CONFIG_MONGO_BACKUPS_ENDPOINT=
        restart: unless-stopped
        networks:
            - sharednet
        depends_on:
            - mongo.local

    test-worker.local:
        build:
            context: ../services/queued
        environment:
            DOCKER_HOST: tcp://docker-in-docker.local:2375
            SHARED_DATA_DIR: /data
        networks:
            - sharednet
        restart: always
        depends_on:
            - docker-in-docker.local
        volumes:
            - worker_shared:/data

    gateway.local:
        image: envoyproxy/envoy:v1.22-latest
        ports:
            - 5000:5000
            - 9901:9901
        volumes:
            - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
        networks:
            - sharednet
    
    redis.local:
        image: redis:7.2.0
        build:
            target: dev
        networks:
            - sharednet
        ports:
            - 6379:6379
        restart: always

    monitoringservice.local:
        build:
            context: ./monitoringservice
            target: dev
        volumes:
            - ./monitoringservice/Program.cs:/src/Program.cs
            - ./monitoringservice/Startup.cs:/src/Startup.cs
            - ./monitoringservice/Model:/src/Model
            - ./monitoringservice/Services:/src/Services
            - ./monitoringservice/Controllers:/src/Controllers
            - ./monitoringservice/monitoringservice.csproj:/src/monitoringservice.csproj
            - ./monitoringservice/appsettings.json:/src/appsettings.json
        networks:
            - sharednet
        ports:
            - 8085:80
        environment:
            DOTNET_USE_POLLING_FILE_WATCHER: 1
            DOTNET_WATCH_SUPPRESS_MSBUILD_INCREMENTALISM: 1
            DOTNET_WATCH_SUPPRESS_LAUNCH_BROWSER: 1
            DOTNET_WATCH_SUPPRESS_BROWSER_REFRESH: 1
            ASPNETCORE_ENVIRONMENT: Development
            API_GATEWAY: http://gateway.local:5000/
            LOG_PRETTY: 1
        restart: always
        depends_on:
            redis.local:
                condition: service_started
            

networks:
    sharednet:

volumes:
    azurite_data:
    worker_shared:
    mongo_data:
