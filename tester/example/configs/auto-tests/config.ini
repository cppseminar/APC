; settings for compiler, you can set up as many configuration as you like
; however mormally just debug and release are needed, this should be double
; quoted so there is no annoying \= as equal sign escapes
[compiler]
example="-Wall -Wextra -pipe -O1 -pedantic-errors"
debug="-fsanitize=address -fsanitize=leak -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -Wall -Wextra -Wformat=2 -Wlogical-op -Wmissing-include-dirs -Wredundant-decls -Wstrict-overflow -Wundef -Wnull-dereference -Walloca -lasan -pipe -pedantic-errors -Werror=vla"
release="-Wall -Wextra -Wformat=2 -Wlogical-op -Wmissing-include-dirs -Wredundant-decls -Wstrict-overflow -Wundef -Wnull-dereference -Walloca -O2 -pipe -pedantic-errors -Werror=vla"
benchmark="-Wall -Wextra -Wformat=2 -Wlogical-op -Wmissing-include-dirs -Wredundant-decls -Wstrict-overflow -Wundef -Wnull-dereference -Walloca -O3 -pipe -pedantic-errors -Wdisabled-optimization -Werror=vla"

; settings for linker if that is applicable, keys are configuration names
[linker]
debug="-lasan"

; parameters for catch unittests based on configuration
[tests]
example="--success --invisibles"
debug="--success --durations yes --invisibles"
release="--success --durations yes --invisibles"
benchmark="--durations yes --invisibles"

; what should be visible tu students, build|tests
[visibility]
example="build|tests"
benchmark="tests"

[mode]
; setting up compile to true will compile the submission and then copy it,
; false will just copy the submission bofore build and will build it together
compile=True

; following section should be created by docker
;[paths]
; path to compiler g++
;compiler=g++-11
; path where the submitted file is located
;submission=./example/submissions/auto-tests/main.cpp
; path where the unittest and support files are located
;tests=./example/tests/auto-tests
; path to where all the logs and other output files will be produced
;output=./output